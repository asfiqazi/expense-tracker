// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(uuid())
  email           String           @unique
  password        String
  name            String?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  expenses        Expense[]
  categories      Category[]
  budgets         Budget[]
  recurringExpenses RecurringExpense[]
}

model Expense {
  id              String    @id @default(uuid())
  name            String
  amount          Float
  date            DateTime
  description     String?
  userId          String
  categoryId      String
  paymentMethod   String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category        Category  @relation(fields: [categoryId], references: [id])
}

model Category {
  id              String    @id @default(uuid())
  name            String
  userId          String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  expenses        Expense[]
  budgets         Budget[]
  recurringExpenses RecurringExpense[]
}

model Budget {
  id              String    @id @default(uuid())
  amount          Float
  startDate       DateTime
  endDate         DateTime
  userId          String
  categoryId      String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category        Category  @relation(fields: [categoryId], references: [id])
}

model RecurringExpense {
  id              String    @id @default(uuid())
  name            String
  amount          Float
  frequency       String    // weekly, monthly, yearly
  startDate       DateTime
  endDate         DateTime?
  userId          String
  categoryId      String
  paymentMethod   String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  category        Category  @relation(fields: [categoryId], references: [id])
}
